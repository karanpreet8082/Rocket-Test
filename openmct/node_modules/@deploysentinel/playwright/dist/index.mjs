import Q,{readFileSync as X}from"fs";import j from"os";import Z from"lodash/pick";import{utils as n,api as w,Types as b,ciProviders as ee,GitClient as te}from"@deploysentinel/debugger-core";import"dotenv/config";import m from"@achrinza/node-ipc";import re from"adm-zip";import x from"lodash/merge";import{codeFrameColumns as ae}from"@babel/code-frame";var A,B;const C=n.createRandomID(),T=process.env.DEPLOYSENTINEL_API_KEY,R=(A=process.env.DEPLOYSENTINEL_API_URL)!=null?A:"https://api.deploysentinel.com/ci",S=n.stringToBoolean(process.env.DEPLOYSENTINEL_LOG_VERBOSE);n.stringToBoolean((B=process.env.DEPLOYSENTINEL_REMOTE_DEBUGGING)!=null?B:"1");const se=R.includes("api.deploysentinel.com"),L="playwright";var oe=Object.defineProperty,ne=Object.defineProperties,ie=Object.getOwnPropertyDescriptors,q=Object.getOwnPropertySymbols,le=Object.prototype.hasOwnProperty,ce=Object.prototype.propertyIsEnumerable,U=(a,e,t)=>e in a?oe(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,E=(a,e)=>{for(var t in e||(e={}))le.call(e,t)&&U(a,t,e[t]);if(q)for(var t of q(e))ce.call(e,t)&&U(a,t,e[t]);return a},de=(a,e)=>ne(a,ie(e));class pe extends w.APIClientBase{constructor(e){super(e)}setTestConfig(e){this.testConfig=E(E({},this.testConfig),e)}getTestConfig(){return this.testConfig}async createRun(e){let t;try{return t=(await this.axiosInstance.post("/run",de(E({},e),{testFramework:L,batchId:this.buildId,debuggerVersion:this.debuggerVersion,testConfig:this.testConfig}))).data,t}catch(s){return this.logger.error({message:s,location:"APIClient:createRun",meta:{runPayload:e}}),t}}async patchRun(e,t){try{await this.axiosInstance.patch(`/run/${e}`,t)}catch(s){this.logger.error({message:s,location:"APIClient:patchRun",meta:{runId:e,runPayload:t}})}}async sendReport(e,t,s){try{await this.axiosInstance.post("/report",{buildId:this.buildId,ciProvider:e,commentInfo:t,runResults:s,debuggerVersion:this.debuggerVersion,testFramework:"playwright"})}catch(o){this.logger.error({message:o,location:"APIClient:sendReport",meta:{ciProvider:e,commentInfo:t,runResults:s}})}}}var me=Object.defineProperty,he=Object.defineProperties,ue=Object.getOwnPropertyDescriptors,M=Object.getOwnPropertySymbols,ge=Object.prototype.hasOwnProperty,fe=Object.prototype.propertyIsEnumerable,V=(a,e,t)=>e in a?me(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,I=(a,e)=>{for(var t in e||(e={}))ge.call(e,t)&&V(a,t,e[t]);if(M)for(var t of M(e))fe.call(e,t)&&V(a,t,e[t]);return a},ye=(a,e)=>he(a,ue(e));const $=(a,e,t)=>new Promise((s,o)=>{const l=`${Math.floor(Math.random()*1e6)}`,h=setTimeout(()=>{o(new Error("IPC Request Timed Out"))},1e4),i=u=>{u.reqId==l&&(clearTimeout(h),a.off(`RES_${e}`,i),s(u.payload))};a.on(`RES_${e}`,i),a.emit(e,{reqId:l,payload:t})});class F extends w.APIClientBase{constructor(e){super(e),this.createRun=async t=>{let s=null;try{return s=await $(this.server,"POST_RUN",ye(I({},t),{testFramework:L,batchId:this.buildId,debuggerVersion:this.debuggerVersion,testConfig:this.testConfig})),s}catch(o){return m.log("Error while creating run",o),s}},this.patchRun=async(t,s)=>{try{await $(this.server,"PATCH_RUN",I({_id:t},s))}catch(o){m.log("Error while patching run",o)}},this.sendMessage=async(t,s,o)=>{},this.uploadToS3=async(t,s,o)=>{if(JSON.parse(t).type!=="internal")try{await $(this.server,"POST_UPLOAD",{url:t,file:s})}catch(l){m.log("Error while uploading artifacts",l)}},m.config.silent=!e.verbose,m.config.appspace="com.deploysentinel.playwright-open.",m.config.retry=1500,m.connectTo("server",()=>{this.server=m.of.server,this.server.on("connect",()=>{m.log("## connected to server ##"),this.server.emit("welcome","hello")}),this.server.on("disconnect",()=>{m.log("disconnected from world")})})}setTestConfig(e){this.testConfig=I(I({},this.testConfig),e)}getTestConfig(){return this.testConfig}async sendReport(...e){return!0}}const be=a=>{console.log("\x1B[33m",`DeploySentinel Reporter: ${a}`,"\x1B[0m")},G=a=>{const[e,t]=n.jsonStringify(a);return e!==null?[e,t]:n.useTry(()=>n.pack(t))},Y=(a,e)=>`${a}:${e}`,ve=a=>{switch(a){case"skipped":return b.RunState.Pending;case"passed":return b.RunState.Passed;case"failed":return b.RunState.Failed;case"timedOut":return b.RunState.Failed;case"interrupted":return b.RunState.TimedOut;default:throw Error(`Unrecognized test status ${a}`)}};var we=Object.defineProperty,Te=Object.defineProperties,Ie=Object.getOwnPropertyDescriptors,J=Object.getOwnPropertySymbols,Pe=Object.prototype.hasOwnProperty,Oe=Object.prototype.propertyIsEnumerable,K=(a,e,t)=>e in a?we(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,P=(a,e)=>{for(var t in e||(e={}))Pe.call(e,t)&&K(a,t,e[t]);if(J)for(var t of J(e))Oe.call(e,t)&&K(a,t,e[t]);return a},Ce=(a,e)=>Te(a,Ie(e));class Re{constructor(e,t,s,o){this.dsRun=e,this.attachments=t,this.logger=s,this.uploadToS3=o??w.uploadToS3}getJSONArrayData(e){return e.getData().toString("utf8").split(`
`).map(t=>{const[s,o]=n.useTry(()=>JSON.parse(t));return o}).filter(t=>t!==null)}readResource(e,{mimeType:t,compression:s,_sha1:o}){return o?e.readAsText(`resources/${o}`):null}async start(){var e;const t=this.attachments.filter(d=>d.path).map(d=>new re(d.path)),s=new n.EventsHandler,o=new n.EventsHandler;for(const d of t){const g=n.createRandomID(),W=d.getEntries();let D=[],k=[];for(const r of W)r.entryName.includes(".trace")?D=this.getJSONArrayData(r):r.entryName.includes(".network")&&(k=this.getJSONArrayData(r));let f=null;for(const r of D)switch(r.type){case"event":{f===null&&r?.metadata!=null&&(f=r),r?.metadata!=null&&r.metadata.type==="ConsoleMessage"&&s.push({type:"console",id:n.createRandomID(),offset:r.metadata.startTime,ts:r.metadata.wallTime,data:{dsContextId:g,pageId:r.metadata.pageId,frameId:r.metadata.frameId,pw_method:r.metadata.method,pw_params:r.metadata.params}});break}case"action":{if(r?.metadata!=null&&!r.metadata.internal&&!r.metadata.method.startsWith("tracing")){const c=Boolean(r.metadata.error),y=r.metadata.log;c&&(e=r.metadata.stack)!=null&&e[0]&&y.push(`

`+ae(this.dsRun.code,{start:{line:r.metadata.stack[0].line,column:r.metadata.stack[0].column}},{highlightCode:!0}));const N=n.createRandomID();o.push({type:"log",id:N,offset:r.metadata.startTime,ts:r.metadata.wallTime,data:P({id:r.metadata.id,name:r.metadata.apiName,dsContextId:g,pageId:r.metadata.pageId,frameId:r.metadata.frameId,pw_params:r.metadata.params,pw_log:r.metadata.log},c&&{err:{name:r.metadata.error.error.message,stack:y}}),took:Math.round(r.metadata.endTime-r.metadata.startTime)}),s.push({type:"log",id:N,offset:r.metadata.startTime,ts:r.metadata.wallTime,data:{name:r.metadata.apiName}})}break}case"frame-snapshot":{o.push({type:"frame-snapshot",id:n.createRandomID(),offset:r.snapshot.timestamp,ts:f?f.metadata.wallTime+Math.round(r.snapshot.timestamp-f.metadata.startTime):0,data:Ce(P({},r.snapshot),{dsContextId:g})});break}}for(const r of k)r.type==="resource-snapshot"&&s.push({type:"network",id:n.createRandomID(),offset:r.snapshot._monotonicTime,ts:f?f.metadata.wallTime+Math.round(r.snapshot._monotonicTime-f.metadata.startTime):new Date(r.snapshot.startedDateTime).getTime(),data:{dsContextId:g,frameId:r.snapshot._frameref,req:P({timestamp:0,url:r.snapshot.request.url,method:r.snapshot.request.method,headers:r.snapshot.request.headers.map(c=>({[c.name]:c.value})).reduce((c,y)=>x(c,y),{}),queryString:r.snapshot.request.queryString},r.snapshot.request.postData&&{body:this.readResource(d,r.snapshot.request.postData)}),res:P({timestamp:r.snapshot.time/1e3,statusCode:r.snapshot.response.status,statusMessage:r.snapshot.response.statusText,headers:r.snapshot.response.headers.map(c=>({[c.name]:c.value})).reduce((c,y)=>x(c,y),{})},r.snapshot.response.content&&{body:this.readResource(d,r.snapshot.response.content)})},took:r.snapshot.time})}const[l,h]=G(s.get().sort((d,g)=>d.offset-g.offset));l!==null&&this.logger.error({message:"failed in stringifying network events",location:"TraceProcessor.start",meta:{run:this.dsRun}});const[i,u]=G({events:[...o.get().sort((d,g)=>d.offset-g.offset),n.createDeploySentinelEvent("log",{name:"End of Test",message:""})]});i!==null&&this.logger.error({message:"failed in stringifying log events",location:"TraceProcessor.start",meta:{run:this.dsRun}});const p=this.attachments[0],[v,O]=n.useTry(()=>X(p.path));v!==null&&this.logger.error({message:"failed in reading trace.zip file",location:"TraceProcessor.start",meta:{error:v,attachment:{name:p.name,path:p.path,contentType:p.contentType},run:this.dsRun}}),await Promise.all([this.uploadToS3(this.dsRun.s3PresignedUrls.browser,u,this.logger),this.uploadToS3(this.dsRun.s3PresignedUrls.plugin,h,this.logger),this.uploadToS3(this.dsRun.s3PresignedUrls.internal,O,this.logger)])}}var _="0.3.4",Se=Object.defineProperty,H=Object.getOwnPropertySymbols,Ee=Object.prototype.hasOwnProperty,$e=Object.prototype.propertyIsEnumerable,z=(a,e,t)=>e in a?Se(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,_e=(a,e)=>{for(var t in e||(e={}))Ee.call(e,t)&&z(a,t,e[t]);if(H)for(var t of H(e))$e.call(e,t)&&z(a,t,e[t]);return a};class De{constructor(){this.enabled=Boolean(T),this.isIpc=T==="LOCAL_IPC",this.ciProvider=ee.provider(),this.apiClient=this.isIpc?new F({apiKey:T,baseUrl:R,buildId:C,debuggerVersion:_,verbose:S}):new pe({apiKey:T,baseUrl:R,buildId:C,debuggerVersion:_,verbose:S}),this.logger=new w.Logger(this.apiClient,S),this.gitClient=new te(this.logger),this.runsPromise=new Map,this.promises=[],be(`[v${_}] is ${this.enabled?"enabled":"disabled (key not found)"}`)}wrap({event:e,handler:t,log:s}){if(this.enabled)try{s&&this.logger.info({location:e,message:`entering browser ${e} hook`}),t()}catch(o){console.error(o),this.logger.error({location:e,message:o.message})}finally{s&&this.logger.info({location:e,message:`exiting browser ${e} hook`})}}async wrapAsync({event:e,handler:t,log:s}){if(this.enabled)try{s&&this.logger.info({location:e,message:`entering browser ${e} hook`}),await t()}catch(o){console.error(o),this.logger.error({location:e,message:o.message})}finally{s&&this.logger.info({location:e,message:`exiting browser ${e} hook`})}}printsToStdio(){return!1}onBegin(e,t){this.wrap({event:"onBegin",log:!0,handler:()=>{this.apiClient.setTestConfig(Z(e,["fullyParallel","globalTimeout","maxFailures","preserveOutput","quiet","reporter","shard","updateSnapshots","version","workers"]))}})}onTestBegin(e,t){this.wrap({event:"onTestBegin",log:!0,handler:()=>{const s=t.retry,o=Y(e.id,s),[l,h,i,...u]=e.titlePath();this.apiClient.setTestConfig({group:h});const p=Promise.all([Q.promises.readFile(e.location.file,"utf8"),this.gitClient.getCommitInfo()]).then(([v,O])=>this.apiClient.createRun({batchId:C,code:v,name:u.join(" "),retryNumber:s,startedAt:t.startTime,testName:i,commitInfo:O,ciProvider:this.ciProvider}));this.runsPromise.set(o,p)}})}onTestEnd(e,t){this.wrap({event:"onTestEnd",log:!0,handler:()=>{const s=Y(e.id,t.retry),o=t.attachments.filter(i=>i.name==="trace"&&i.contentType==="application/zip"),l=t.status==="failed"||t.status==="timedOut",h=this.runsPromise.get(s);h&&this.promises.push(h.then(i=>{if(i){const u=o.length>0;let p;return u&&(this.isIpc==!1&&console.log("\x1B[35m","DeploySentinel",`\x1B[0mDebug URL: ${n.getDebuggerUrl(i._id,!se)}
	${l?"\x1B[31mx\x1B[0m":"\x1B[32m\u2713\x1B[0m"} ${e.title}`),p=new Re(i,o,this.logger,this.isIpc&&this.apiClient instanceof F?this.apiClient.uploadToS3:void 0)),Promise.all([p?.start(),this.apiClient.patchRun(i._id,_e({completedAt:new Date(t.startTime.getTime()+t.duration),took:t.duration,state:ve(t.status)},t.error&&{errorTrace:{message:t.error.message,name:t.error.value,stack:t.error.stack}}))])}}))}})}async onEnd(e){await this.wrapAsync({event:"onEnd",log:!0,handler:async()=>{const t=await Promise.allSettled(this.promises);for(const l of t)l.status==="rejected"&&this.logger.error({message:l.reason,location:"onEnd"});const s=this.apiClient.getTestConfig(),o=await this.gitClient.getCommitInfo();await this.apiClient.sendReport(this.ciProvider,o,{browserName:s.group,browserVersion:null,osName:j.platform(),osVersion:j.release(),testFrameworkVersion:s.version})}})}}export{De as default};
